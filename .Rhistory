install.packages(ggplot2)
install.packages("ggplot2")
install.packages(ggcorrplot)
install.packages("ggcorrplot")
tinytex::install_tinytex()
library(ggplot2)
install.packages("dplyr")
library(ggcorrplot)
knitr::opts_chunk$set(echo = TRUE)
red_wine_data <- red_wine_data %>%
mutate(Alevel= case_when(alcohol >= 10.5 ~ "High", alcohol < 10.5 ~ "Medium"))
knitr::opts_chunk$set(echo = TRUE)
library("dplyr")
red_wine_data <- read.csv('winequality-red.csv')
median_wine_quality <- median(red_wine_data$quality)
print(median_wine_quality)
avg_alcohol_level <- mean(red_wine_data$alcohol)
print(avg_alcohol_level)
library("ggplot2")
ggplot(red_wine_data, aes(x=density, y=volatile_acidity)) + geom_point() + ggtitle("Wine Density v.s. Volatile Acidity")
red_wine_data <- red_wine_data %>%
mutate(Alevel= case_when(alcohol >= 10.5 ~ "High", alcohol < 10.5 ~ "Medium"))
red_wine_data <- red_wine_data %>%
mutate(sulph_chl=sulphates/chlorides)
ggplot(red_wine_data, aes(x=Alevel, y=sulph_chl)) +
geom_boxplot()+ggtitle("Sulphate/Chloride Ratio for Medium and High Alcohol Levels")
ggplot(red_wine_data, aes(x=citric_acid))+geom_histogram()+facet_grid(Alevel ~ .)+ggtitle("Distribution of Citric Acid Levels in Red Wines of High and Medium Alcohol Content")
ggplot(red_wine_data, aes(x=citric_acid, y=pH))+geom_point()+ggtitle("Citric Acid Level v.s. pH in Red Wines")
ggplot(red_wine_data, aes(x=pH,y=alcohol))+geom_point()+ggtitle("pH v.s. Alcohol Level in Red Wines")
bikes <- read.csv('bikes.csv')
# qualitative: date, season, holiday, weather
# quantitative: temp, atemp, humidity, windspeed, count
bikes %>%
summarise_each(funs(mean, range, sd), temp, atemp, humidity, windspeed, count)
bikes %>%
group_by(season) %>%
summarise(max=max(count,na.rm=FALSE))
ggplot(bikes, aes(group=weather, y=count)) +
geom_boxplot() + labs(x="Weather Type")+ggtitle("Median Bike Rentals & Distribution by Weather Type")+scale_x_discrete(breaks=c("1","2","3","4"),
labels=c("Clear", "Overcast", "Light Rain/Snow", "Heavy Rain/Snow"))
bikes <- bikes %>%
mutate(month = as.integer(format(as.Date(bikes$date,format="%m/%d/%Y"),"%m")))
bikes %>%
group_by(month) %>%
summarise(count=sum(count,na.rm=FALSE)) %>%
ggplot(.,aes(x=month,y=count))+geom_bar(stat="identity")+ggtitle("Number of Bike Rentals per Month")+scale_x_discrete(breaks=c("1","2","3","4","5","6","7","8","9","10","11","12"),
labels=c("Jan", "Feb", "Mar", "Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"))
library("ggcorrplot")
ggplot(bikes,aes(x=holiday,y=count))
quantitative_predictors=select(bikes,count,windspeed,humidity,atemp,temp,month,season,holiday,workingday,weather)
corr <- round(cor(quantitative_predictors), 1)
p.mat <- cor_pmat(quantitative_predictors)
ggcorrplot(corr)+ggtitle("Correlation Matrix for Daily Bike Rentals")
library("ggcorrplot")
ggplot(bikes,aes(x=holiday,y=count))+geom_point()
quantitative_predictors=select(bikes,count,windspeed,humidity,atemp,temp,month,season,holiday,workingday,weather)
corr <- round(cor(quantitative_predictors), 1)
p.mat <- cor_pmat(quantitative_predictors)
ggcorrplot(corr)+ggtitle("Correlation Matrix for Daily Bike Rentals")
library("ggcorrplot")
bikes %>%
group_by(holiday)
summarise(average_bike_rental=mean(count))
library("ggcorrplot")
bikes %>%
group_by(holiday) %>%
summarise(average_bike_rental=mean(count))
quantitative_predictors=select(bikes,count,windspeed,humidity,atemp,temp,month,season,holiday,workingday,weather)
corr <- round(cor(quantitative_predictors), 1)
p.mat <- cor_pmat(quantitative_predictors)
ggcorrplot(corr)+ggtitle("Correlation Matrix for Daily Bike Rentals")
library("ggcorrplot")
bikes %>%
group_by(holiday) %>%
summarise(average_bike_rental=mean(count))
bikes %>%
group_by(workingday)
summarise(average_bike_rental=mean(count))
library("ggcorrplot")
bikes %>%
group_by(holiday) %>%
summarise(average_bike_rental=mean(count))
bikes %>%
group_by(workingday) %>%
summarise(average_bike_rental=mean(count))
quantitative_predictors=select(bikes,count,windspeed,humidity,atemp,temp,month,season,holiday,workingday,weather)
corr <- round(cor(quantitative_predictors), 1)
p.mat <- cor_pmat(quantitative_predictors)
ggcorrplot(corr)+ggtitle("Correlation Matrix for Daily Bike Rentals")
bikes <- bikes %>%
mutate(month = as.integer(format(as.Date(bikes$date,format="%m/%d/%Y"),"%m")))
bikes %>%
group_by(month) %>%
summarise(count=sum(count,na.rm=FALSE)) %>%
ggplot(.,aes(x=month,y=count))+geom_bar(stat="identity")+ggtitle("Number of Bike Rentals per Month")+scale_x_discrete(breaks=1,2,3,4,5,6,7,8,9,10,11,12),
bikes <- bikes %>%
mutate(month = as.integer(format(as.Date(bikes$date,format="%m/%d/%Y"),"%m")))
bikes %>%
group_by(month) %>%
summarise(count=sum(count,na.rm=FALSE)) %>%
ggplot(.,aes(x=month,y=count))+geom_bar(stat="identity")+ggtitle("Number of Bike Rentals per Month")+scale_x_discrete(breaks=c("1","2","3","4","5","6","7","8","9","10","11","12"),
labels=c("Jan", "Feb", "Mar", "Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"))
ggplot(bikes, aes(group=weather, y=count)) +
geom_boxplot() + labs(x="Weather Type")+ggtitle("Median Bike Rentals & Distribution by Weather Type")+scale_x_discrete(breaks=c(1,4),
labels=c("Clear", "Overcast", "Light Rain/Snow", "Heavy Rain/Snow"))
ggplot(bikes, aes(group=weather, y=count)) +
geom_boxplot() + labs(x="Weather Type")+ggtitle("Median Bike Rentals & Distribution by Weather Type")+scale_x_discrete(breaks=c("1","2","3","4"),
labels=c("Clear", "Overcast", "Light Rain/Snow", "Heavy Rain/Snow"))
ggplot(bikes, aes(group=weather, y=count)) +
geom_boxplot() + labs(x="Weather Type")+ggtitle("Median Bike Rentals & Distribution by Weather Type")+scale_x_discrete(breaks=c("1","2","3","4"))
ggplot(bikes, aes(group=weather, y=count)) +
geom_boxplot() + labs(x="Weather Type")+ggtitle("Median Bike Rentals & Distribution by Weather Type")
bikes <- bikes %>%
mutate(month = as.integer(format(as.Date(bikes$date,format="%m/%d/%Y"),"%m")))
bikes %>%
group_by(month) %>%
summarise(count=sum(count,na.rm=FALSE)) %>%
ggplot(.,aes(x=month,y=count))+geom_bar(stat="identity")+ggtitle("Number of Bike Rentals per Month")+scale_x_discrete(breaks=c("1","2","3","4","5","6","7","8","9","10","11","12"),
labels=c("Jan", "Feb", "Mar", "Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"))+scale_y_discrete(name="Number of Bike Rentals")
bikes <- bikes %>%
mutate(month = as.integer(format(as.Date(bikes$date,format="%m/%d/%Y"),"%m")))
bikes %>%
group_by(month) %>%
summarise(count=sum(count,na.rm=FALSE)) %>%
ggplot(.,aes(x=month,y=count))+geom_bar(stat="identity")+ggtitle("Number of Bike Rentals per Month")
bikes <- bikes %>%
mutate(month = as.integer(format(as.Date(bikes$date,format="%m/%d/%Y"),"%m")))
bikes %>%
group_by(month) %>%
summarise(count=sum(count,na.rm=FALSE)) %>%
ggplot(.,aes(x=month,y=count))+geom_bar(stat="identity")+ggtitle("Number of Bike Rentals per Month")+scale_x_discrete(breaks=c("1","2","3","4","5","6","7","8","9","10","11","12"))
bikes <- bikes %>%
mutate(month = as.integer(format(as.Date(bikes$date,format="%m/%d/%Y"),"%m")))
bikes %>%
group_by(month) %>%
summarise(count=sum(count,na.rm=FALSE)) %>%
ggplot(.,aes(x=month,y=count))+geom_bar(stat="identity")+ggtitle("Number of Bike Rentals per Month")+scale_x_discrete(limits=c("1","2","3","4","5","6","7","8","9","10","11","12"),
labels=c("Jan", "Feb", "Mar", "Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"))+labs(y="Number of Bike Rentals")
ggplot(bikes, aes(group=weather, y=count)) +
geom_boxplot() + labs(x="Weather Type",y="Number of Bike Rentals")+ggtitle("Median Bike Rentals & Distribution by Weather Type")+scale_x_discrete(limits=c("1","2","3","4"),
labels=c("Clear", "Overcast", "Light Rain/Snow", "Heavy Rain/Snow"))
ggplot(bikes, aes(group=weather, y=count)) +
geom_boxplot() + labs(x="Weather Type",y="Number of Bike Rentals")+ggtitle("Median Bike Rentals & Distribution by Weather Type")+scale_x_discrete(breaks=c("1","2","3","4"),
labels=c("Clear", "Overcast", "Light Rain/Snow", "Heavy Rain/Snow"))
ggplot(bikes, aes(group=weather, y=count)) +
geom_boxplot() + labs(x="Weather Type",y="Number of Bike Rentals")+ggtitle("Median Bike Rentals & Distribution by Weather Type")+scale_x_discrete(limits=c("-0.1","0","0.1","0.2"),
labels=c("Clear", "Overcast", "Light Rain/Snow", "Heavy Rain/Snow"))
ggplot(bikes, aes(group=weather, y=count)) +
geom_boxplot() + labs(x="Weather Type",y="Number of Bike Rentals")+ggtitle("Median Bike Rentals & Distribution by Weather Type")
bikes <- read.csv('bikes.csv')
# qualitative: date, season, holiday, weather
# quantitative: temp, atemp, humidity, windspeed, count
print(bikes$weather)
ggplot(bikes, aes(group=weather, y=count)) +
geom_boxplot() + labs(x="Weather Type",y="Number of Bike Rentals")+ggtitle("Median Bike Rentals & Distribution by Weather Type")+scale_x_discrete()
ggplot(bikes, aes(group=weather, y=count)) +
geom_boxplot() + labs(x="Weather Type",y="Number of Bike Rentals")+ggtitle("Median Bike Rentals & Distribution by Weather Type")+scale_x_discrete()
ggplot(bikes, aes(group=weather, y=count)) +
geom_boxplot() + labs(x="Weather Type",y="Number of Bike Rentals")+ggtitle("Median Bike Rentals & Distribution by Weather Type")+scale_x_discrete(limits=c("1","2","3","4"))
ggplot(bikes, aes(group=weather, y=count)) +
geom_boxplot() + labs(x="Weather Type",y="Number of Bike Rentals")+ggtitle("Median Bike Rentals & Distribution by Weather Type")
bikes %>%
groupby(weather) %>%
ggplot(.,aes(y=count))+geom_boxplot()+ labs(x="Weather Type",y="Number of Bike Rentals")+ggtitle("Median Bike Rentals & Distribution by Weather Type")
bikes %>%
group_by(weather) %>%
ggplot(.,aes(y=count))+geom_boxplot()+ labs(x="Weather Type",y="Number of Bike Rentals")+ggtitle("Median Bike Rentals & Distribution by Weather Type")
ggplot(bikes, aes(group=weather, y=count)) +
geom_boxplot() + labs(x="Weather Type",y="Number of Bike Rentals")+ggtitle("Median Bike Rentals & Distribution by Weather Type")
ggplot(bikes, aes(x=weather, y=count)) +
geom_boxplot() + labs(x="Weather Type",y="Number of Bike Rentals")+ggtitle("Median Bike Rentals & Distribution by Weather Type")
ggplot(bikes, aes(x=as.factor(weather), y=count)) +
geom_boxplot() + labs(x="Weather Type",y="Number of Bike Rentals")+ggtitle("Median Bike Rentals & Distribution by Weather Type")
ggplot(bikes, aes(x=as.factor(weather), y=count)) +
geom_boxplot() + labs(x="Weather Type",y="Number of Bike Rentals")+ggtitle("Median Bike Rentals & Distribution by Weather Type")+scale_x_discrete(limits=c("1","2","3","4"),labels=c("Clear","Overcast","Light Rain/Snow","Heavy Rain/Snow"))
setwd("C:/Users/wertz/OneDrive - Washington State University (email.wsu.edu)/Historical Outage Analysis/Summer2024-Outage-Analysis")
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
svi_reliability=read.csv("outage_records/metrics.csv")
svi_reliability %>%
filter(county=="Bond") %>%
ggplot(.,aes(x=caidi,y=svi))+geom_point()+scale_x_sqrt()
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
svi_reliability=read.csv("outage_records/metrics.csv")
svi_reliability %>%
filter(county=="Bond") %>%
ggplot(.,aes(x=caidi,y=svi))+geom_point()+scale_x_sqrt()
wind_speed_customers=read.csv("processed_wind_customer_outage.csv")
# to do: python normalized customer outages csv.
wind_speed_customers <- wind_speed_customers %>%
mutate(year=as.integer(format(as.Date(wind_speed_customers$date,format="%m/%d/%Y"),"%Y")))
wind_speed_customers %>%
#filter(year==2023|year==2022|year==2021|year==2020) %>%
filter(num_people_out >100) %>%
ggplot(.,aes(x=wind_speed_mph,y=percent_customers_out*100))+geom_point()
wind_speed_customers=read.csv("processed_wind_customer_outage.csv")
# to do: python normalized customer outages csv.
wind_speed_customers <- wind_speed_customers %>%
mutate(year=as.integer(format(as.Date(wind_speed_customers$date,format="%m/%d/%Y"),"%Y")))
wind_speed_customers %>%
filter(year==2023|year==2022|year==2021|year==2020) %>%
filter(num_people_out >100) %>%
ggplot(.,aes(x=wind_speed_mph,y=percent_customers_out*100))+geom_point()
wind_speed_customers=read.csv("processed_wind_customer_outage.csv")
# to do: python normalized customer outages csv.
wind_speed_customers <- wind_speed_customers %>%
mutate(year=as.integer(format(as.Date(wind_speed_customers$date,format="%m/%d/%Y"),"%Y")))
wind_speed_customers %>%
filter(year==2023|year==2022|year==2021|year==2020) %>%
filter(num_people_out >100) %>%
ggplot(.,aes(x=wind_speed_mph,y=num_people_out))+geom_point()
wind_speed_customers=read.csv("processed_wind_customer_outage.csv")
# to do: python normalized customer outages csv.
wind_speed_customers <- wind_speed_customers %>%
mutate(year=as.integer(format(as.Date(wind_speed_customers$date,format="%m/%d/%Y"),"%Y")))
wind_speed_customers %>%
#filter(year==2023|year==2022|year==2021|year==2020) %>%
filter(percent_customers_out > 0.05) %>%
ggplot(.,aes(x=wind_speed_mph,y=percent_customers_out*100))+geom_point()
svi_reliability <- svi_reliability %>%
mutate(quartile=case_when(svi <= 0.25 ~ 1,(svi <= 0.5 & svi > 0.25) ~ 2,(svi <= 0.75 & svi > 0.5) ~ 3,(svi <= 1 & svi > 0.75) ~ 4))
svi_reliability %>%
filter(year==2023|year==2022|year==2021|year==2020) %>%
group_by(county) %>%
summarise(avg=mean(saifi)) %>%
top_n(10)
svi_reliability <- svi_reliability %>%
mutate(quartile=case_when(svi <= 0.25 ~ 1,(svi <= 0.5 & svi > 0.25) ~ 2,(svi <= 0.75 & svi > 0.5) ~ 3,(svi <= 1 & svi > 0.75) ~ 4))
svi_reliability %>%
filter(year==2023|year==2022|year==2021|year==2020) %>%
group_by(county) %>%
summarise(avg=mean(saidi)) %>%
top_n(10)
